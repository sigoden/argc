---
source: tests/spec.rs
expression: data
---
************ RUN ************
prog test1

OUTPUT
argc__args=( prog test1 )
argc__cmd_arg_index=1
argc__fn=test1
argc__positionals=(  )
test1

************ RUN ************
prog test1 -a

OUTPUT
argc_a=1
argc__args=( prog test1 -a )
argc__cmd_arg_index=1
argc__fn=test1
argc__positionals=(  )
test1

************ RUN ************
prog test1 -f -f

OUTPUT
argc_fb=2
argc__args=( prog test1 -f -f )
argc__cmd_arg_index=1
argc__fn=test1
argc__positionals=(  )
test1

************ RUN ************
prog test1 -e e

OUTPUT
argc_e=e
argc__args=( prog test1 -e e )
argc__cmd_arg_index=1
argc__fn=test1
argc__positionals=(  )
test1

************ RUN ************
prog test1 --oa oa

OUTPUT
argc_oa=oa
argc__args=( prog test1 --oa oa )
argc__cmd_arg_index=1
argc__fn=test1
argc__positionals=(  )
test1

************ RUN ************
prog test1 --ob ob1 --ob ob2

OUTPUT
argc_ob=( ob1 ob2 )
argc__args=( prog test1 --ob ob1 --ob ob2 )
argc__cmd_arg_index=1
argc__fn=test1
argc__positionals=(  )
test1

************ RUN ************
prog test1 --oe ob1,ob2 --oe ob3

OUTPUT
argc_oe=( ob1 ob2 ob3 )
argc__args=( prog test1 --oe ob1,ob2 --oe ob3 )
argc__cmd_arg_index=1
argc__fn=test1
argc__positionals=(  )
test1

************ RUN ************
prog test1 -o ob1 ob2

OUTPUT
argc_od=( ob1 ob2 )
argc__args=( prog test1 -o ob1 ob2 )
argc__cmd_arg_index=1
argc__fn=test1
argc__positionals=(  )
test1

************ RUN ************
prog test1 --cc abc

OUTPUT
argc_cc=abc
argc__args=( prog test1 --cc abc )
argc__cmd_arg_index=1
argc__fn=test1
argc__positionals=(  )
test1

************ RUN ************
prog test1 -soa soa

OUTPUT
argc_soa=soa
argc__args=( prog test1 -soa soa )
argc__cmd_arg_index=1
argc__fn=test1
argc__positionals=(  )
test1

************ RUN ************
prog test3

OUTPUT
argc_oe=val
argc_of=`_default_fn`
argc_cb=x
argc__args=( prog test3 )
argc__cmd_arg_index=1
argc__fn=test3
argc__positionals=(  )
test3

************ RUN ************
prog test3 --oe oe

OUTPUT
argc_oe=oe
argc_of=`_default_fn`
argc_cb=x
argc__args=( prog test3 --oe oe )
argc__cmd_arg_index=1
argc__fn=test3
argc__positionals=(  )
test3

************ RUN ************
prog test3 --of of

OUTPUT
argc_oe=val
argc_of=of
argc_cb=x
argc__args=( prog test3 --of of )
argc__cmd_arg_index=1
argc__fn=test3
argc__positionals=(  )
test3

************ RUN ************
prog test3 --cb y

OUTPUT
argc_oe=val
argc_of=`_default_fn`
argc_cb=y
argc__args=( prog test3 --cb y )
argc__cmd_arg_index=1
argc__fn=test3
argc__positionals=(  )
test3


