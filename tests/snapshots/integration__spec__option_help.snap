---
source: tests/spec.rs
expression: data
---
************ RUN ************
prog options -h

# OUTPUT
command cat >&2 <<-'EOF' 
All kind of options

USAGE: prog options [OPTIONS] --oc <OC> --oe <OE>...

OPTIONS:
      --oa <OA>
  -b, --ob <OB>            short
  -c <C>                   short only
      --oc <OC>            required
      --od [OD]...         multi-occurs
      --oe <OE>...         required + multi-occurs
      --of [OF]...         multi-occurs + comma-separated list
      --ona <PATH>         value notation
      --onb <FILE> <FILE>  two-args value notations
      --onc <CMD> <FILE+>  unlimited-args value notations
      --oda <ODA>          default [default: a]
      --odb <ODB>          default from fn
      --oca <OCA>          choice [possible values: a, b]
      --ocb <OCB>          choice + default [possible values: a, b] [default: a]
      --occ [OCC]...       multi-occurs + choice [possible values: a, b]
      --ofa <OFA>          choice from fn
      --ofb <OFB>          choice from fn + no validation
      --ofc [OFC]...       multi-occurs + choice from fn
      --ofd [OFD]...       multi-occurs + choice from fn + comma-separated list
      --oxa <OXA~>         capture all remaining args
  -h,  -help               Print help

EOF
exit 0

# RUN_OUTPUT
All kind of options

USAGE: prog options [OPTIONS] --oc <OC> --oe <OE>...

OPTIONS:
      --oa <OA>
  -b, --ob <OB>            short
  -c <C>                   short only
      --oc <OC>            required
      --od [OD]...         multi-occurs
      --oe <OE>...         required + multi-occurs
      --of [OF]...         multi-occurs + comma-separated list
      --ona <PATH>         value notation
      --onb <FILE> <FILE>  two-args value notations
      --onc <CMD> <FILE+>  unlimited-args value notations
      --oda <ODA>          default [default: a]
      --odb <ODB>          default from fn
      --oca <OCA>          choice [possible values: a, b]
      --ocb <OCB>          choice + default [possible values: a, b] [default: a]
      --occ [OCC]...       multi-occurs + choice [possible values: a, b]
      --ofa <OFA>          choice from fn
      --ofb <OFB>          choice from fn + no validation
      --ofc [OFC]...       multi-occurs + choice from fn
      --ofd [OFD]...       multi-occurs + choice from fn + comma-separated list
      --oxa <OXA~>         capture all remaining args
  -h,  -help               Print help

************ RUN ************
prog flags -h

# OUTPUT
command cat >&2 <<-'EOF' 
All kind of flags

USAGE: prog flags [OPTIONS]

OPTIONS:
      --fa
  -b, --fb     short
  -c           short only
      --fd...  multi-occurs
  -e, --fe...  short + multi-occurs
  -h,  -help   Print help

EOF
exit 0

# RUN_OUTPUT
All kind of flags

USAGE: prog flags [OPTIONS]

OPTIONS:
      --fa
  -b, --fb     short
  -c           short only
      --fd...  multi-occurs
  -e, --fe...  short + multi-occurs
  -h,  -help   Print help

************ RUN ************
prog options-one-hyphen -h

# OUTPUT
command cat >&2 <<-'EOF' 
Flags or options with single hyphen

USAGE: prog options-one-hyphen [OPTIONS]

OPTIONS:
       -fa
  -b,  -fb
       -fd...
       -oa <OA>
       -od [OD]...
       -ona <PATH>
       -oca <OCA>   [possible values: a, b]
       -ofa <OFA>
  -h,  -help

EOF
exit 0

# RUN_OUTPUT
Flags or options with single hyphen

USAGE: prog options-one-hyphen [OPTIONS]

OPTIONS:
       -fa
  -b,  -fb
       -fd...
       -oa <OA>
       -od [OD]...
       -ona <PATH>
       -oca <OCA>   [possible values: a, b]
       -ofa <OFA>
  -h,  -help

************ RUN ************
prog options-notation-modifier -h

# OUTPUT
command cat >&2 <<-'EOF' 
Value notation modifier

USAGE: prog options-notation-modifier [OPTIONS]

OPTIONS:
      --oa <VALUE*>  multi values, zero or more
      --ob <VALUE+>  multi values, one or more
      --oc <VALUE?>  zero or one
  -h, --help         Print help

EOF
exit 0

# RUN_OUTPUT
Value notation modifier

USAGE: prog options-notation-modifier [OPTIONS]

OPTIONS:
      --oa <VALUE*>  multi values, zero or more
      --ob <VALUE+>  multi values, one or more
      --oc <VALUE?>  zero or one
  -h, --help         Print help

************ RUN ************
prog options-plus -h

# OUTPUT
command cat >&2 <<-'EOF' 
All kind of options

USAGE: prog options-plus [OPTIONS] +oc <OC> +oe <OE>... +ocd <OCD>...

OPTIONS:
       +oa <OA>
  +b,  +ob <OB>            short
  +c <C>                   short only
       +oc <OC>            required
       +od [OD]...         multi-occurs
       +oe <OE>...         required + multi-occurs
       +ona <PATH>         value notation
       +onb <FILE> <FILE>  two-args value notations
       +onc <CMD> <FILE+>  unlimited-args value notations
       +oda <ODA>          default [default: a]
       +odb <ODB>          default from fn
       +oca <OCA>          choice [possible values: a, b]
       +ocb <OCB>          choice + default [possible values: a, b] [default: a]
       +occ [OCC]...       multi-occurs + choice [possible values: a, b]
       +ocd <OCD>...       required + multi-occurs + choice [possible values: a, b]
       +ofa <OFA>          choice from fn
       +ofb <OFB>          choice from fn + no validation
       +ofc [OFC]...       multi-occurs + choice from fn
       +ofd [OFD]...       multi-occurs + choice from fn + comma-separated list
       +oxa <OXA~>         capture all remaining args
  -h,  -help               Print help

EOF
exit 0

# RUN_OUTPUT
All kind of options

USAGE: prog options-plus [OPTIONS] +oc <OC> +oe <OE>... +ocd <OCD>...

OPTIONS:
       +oa <OA>
  +b,  +ob <OB>            short
  +c <C>                   short only
       +oc <OC>            required
       +od [OD]...         multi-occurs
       +oe <OE>...         required + multi-occurs
       +ona <PATH>         value notation
       +onb <FILE> <FILE>  two-args value notations
       +onc <CMD> <FILE+>  unlimited-args value notations
       +oda <ODA>          default [default: a]
       +odb <ODB>          default from fn
       +oca <OCA>          choice [possible values: a, b]
       +ocb <OCB>          choice + default [possible values: a, b] [default: a]
       +occ [OCC]...       multi-occurs + choice [possible values: a, b]
       +ocd <OCD>...       required + multi-occurs + choice [possible values: a, b]
       +ofa <OFA>          choice from fn
       +ofb <OFB>          choice from fn + no validation
       +ofc [OFC]...       multi-occurs + choice from fn
       +ofd [OFD]...       multi-occurs + choice from fn + comma-separated list
       +oxa <OXA~>         capture all remaining args
  -h,  -help               Print help

************ RUN ************
prog flags-plus -h

# OUTPUT
command cat >&2 <<-'EOF' 
All kind of flags

USAGE: prog flags-plus [OPTIONS]

OPTIONS:
       +fa
  +b,  +fb     short
  +c           short only
       +fd...  multi-occurs
  +e,  +fe...  short + multi-occurs
  -h,  -help   Print help

EOF
exit 0

# RUN_OUTPUT
All kind of flags

USAGE: prog flags-plus [OPTIONS]

OPTIONS:
       +fa
  +b,  +fb     short
  +c           short only
       +fd...  multi-occurs
  +e,  +fe...  short + multi-occurs
  -h,  -help   Print help

************ RUN ************
prog options-mixed -h

# OUTPUT
command cat >&2 <<-'EOF' 
Mixed `-` and `+` options

USAGE: prog options-mixed [OPTIONS]

OPTIONS:
  +a,  -a <A>
  -b,  +b <B>
  +c, --c <C>
  -h,  -help

EOF
exit 0

# RUN_OUTPUT
Mixed `-` and `+` options

USAGE: prog options-mixed [OPTIONS]

OPTIONS:
  +a,  -a <A>
  -b,  +b <B>
  +c, --c <C>
  -h,  -help

************ RUN ************
prog options-prefixed -h

# OUTPUT
command cat >&2 <<-'EOF' 
Prefixed option

USAGE: prog options-prefixed [OPTIONS]

OPTIONS:
  -X [X]...   prefixied + multi-occurs + choice from fn
  +X [X]...   prefixied + multi-occurs + choice from fn
  -h,  -help  Print help

EOF
exit 0

# RUN_OUTPUT
Prefixed option

USAGE: prog options-prefixed [OPTIONS]

OPTIONS:
  -X [X]...   prefixied + multi-occurs + choice from fn
  +X [X]...   prefixied + multi-occurs + choice from fn
  -h,  -help  Print help

************ RUN ************
prog options-assigned -h

# OUTPUT
command cat >&2 <<-'EOF' 
Prefixed option

USAGE: prog options-assigned [OPTIONS]

OPTIONS:
  -f, --follow=<FOLLOW>  assigned + choice [possible values: a, b]
  -h, --help             Print help

EOF
exit 0

# RUN_OUTPUT
Prefixed option

USAGE: prog options-assigned [OPTIONS]

OPTIONS:
  -f, --follow=<FOLLOW>  assigned + choice [possible values: a, b]
  -h, --help             Print help

************ RUN ************
prog test1 -h

# OUTPUT
command cat >&2 <<-'EOF' 
USAGE: prog test1 [OPTIONS]

OPTIONS:
  -a
      --fa
  -f, --fb...
       -sa
       -sb...
  -e <E>
      --oa <OA>
      --ob [OB]...
      --oc <DIR>
  -o, --od <FILE> <FILE>
      --oe [OE]...
      --ca <CA>           [possible values: x, y, z]
      --cc <CC>
      --cd <CD>
      --ce [CE]...
  -s,  -soa <SOA>
  -h,  -help

EOF
exit 0

# RUN_OUTPUT
USAGE: prog test1 [OPTIONS]

OPTIONS:
  -a
      --fa
  -f, --fb...
       -sa
       -sb...
  -e <E>
      --oa <OA>
      --ob [OB]...
      --oc <DIR>
  -o, --od <FILE> <FILE>
      --oe [OE]...
      --ca <CA>           [possible values: x, y, z]
      --cc <CC>
      --cd <CD>
      --ce [CE]...
  -s,  -soa <SOA>
  -h,  -help

************ RUN ************
prog test2 -h

# OUTPUT
command cat >&2 <<-'EOF' 
USAGE: prog test2 --oa <OA> --ob <OB>... --oc <OC>... --oca <OCA> --ocb <OCB>... --occ <OCC>...

OPTIONS:
  -a, --oa <OA>
      --ob <OB>...
      --oc <OC>...
      --oca <OCA>
      --ocb <OCB>...
      --occ <OCC>...
  -h, --help

EOF
exit 0

# RUN_OUTPUT
USAGE: prog test2 --oa <OA> --ob <OB>... --oc <OC>... --oca <OCA> --ocb <OCB>... --occ <OCC>...

OPTIONS:
  -a, --oa <OA>
      --ob <OB>...
      --oc <OC>...
      --oca <OCA>
      --ocb <OCB>...
      --occ <OCC>...
  -h, --help

************ RUN ************
prog test3 -h

# OUTPUT
command cat >&2 <<-'EOF' 
USAGE: prog test3 [OPTIONS]

OPTIONS:
      --oe <OE>  [default: val]
      --of <OF>
      --cb <CB>  [possible values: x, y, z] [default: x]
  -h, --help

EOF
exit 0

# RUN_OUTPUT
USAGE: prog test3 [OPTIONS]

OPTIONS:
      --oe <OE>  [default: val]
      --of <OF>
      --cb <CB>  [possible values: x, y, z] [default: x]
  -h, --help
