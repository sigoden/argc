---
source: tests/spec.rs
expression: data
---
************ RUN ************
prog cmd -h

# OUTPUT
command cat >&2 <<-'EOF' 
USAGE: prog cmd

EOF
exit 0

# RUN_OUTPUT
USAGE: prog cmd

************ RUN ************
prog cmd_alias -h

# OUTPUT
command cat >&2 <<-'EOF' 
USAGE: prog cmd_alias

EOF
exit 0

# RUN_OUTPUT
USAGE: prog cmd_alias

************ RUN ************
prog cmd_arg -h

# OUTPUT
command cat >&2 <<-'EOF' 
USAGE: prog cmd_arg [VAL]

ARGS:
  [VAL]

EOF
exit 0

# RUN_OUTPUT
USAGE: prog cmd_arg [VAL]

ARGS:
  [VAL]

************ RUN ************
prog cmd_multi_arg -h

# OUTPUT
command cat >&2 <<-'EOF' 
USAGE: prog cmd_multi_arg [VAL]...

ARGS:
  [VAL]...

EOF
exit 0

# RUN_OUTPUT
USAGE: prog cmd_multi_arg [VAL]...

ARGS:
  [VAL]...

************ RUN ************
prog cmd_required_multi_arg -h

# OUTPUT
command cat >&2 <<-'EOF' 
USAGE: prog cmd_required_multi_arg <VAL>...

ARGS:
  <VAL>...

EOF
exit 0

# RUN_OUTPUT
USAGE: prog cmd_required_multi_arg <VAL>...

ARGS:
  <VAL>...

************ RUN ************
prog cmd_required_arg -h

# OUTPUT
command cat >&2 <<-'EOF' 
USAGE: prog cmd_required_arg <VAL>

ARGS:
  <VAL>

EOF
exit 0

# RUN_OUTPUT
USAGE: prog cmd_required_arg <VAL>

ARGS:
  <VAL>

************ RUN ************
prog cmd_arg_with_default -h

# OUTPUT
command cat >&2 <<-'EOF' 
USAGE: prog cmd_arg_with_default [VAL]

ARGS:
  [VAL]  [default: xyz]

EOF
exit 0

# RUN_OUTPUT
USAGE: prog cmd_arg_with_default [VAL]

ARGS:
  [VAL]  [default: xyz]

************ RUN ************
prog cmd_arg_with_default_fn -h

# OUTPUT
command cat >&2 <<-'EOF' 
USAGE: prog cmd_arg_with_default_fn [VAL]

ARGS:
  [VAL]

EOF
exit 0

# RUN_OUTPUT
USAGE: prog cmd_arg_with_default_fn [VAL]

ARGS:
  [VAL]

************ RUN ************
prog cmd_arg_with_choices -h

# OUTPUT
command cat >&2 <<-'EOF' 
USAGE: prog cmd_arg_with_choices [VAL]

ARGS:
  [VAL]  [possible values: x, y, z]

EOF
exit 0

# RUN_OUTPUT
USAGE: prog cmd_arg_with_choices [VAL]

ARGS:
  [VAL]  [possible values: x, y, z]

************ RUN ************
prog cmd_arg_with_choices_and_default -h

# OUTPUT
command cat >&2 <<-'EOF' 
USAGE: prog cmd_arg_with_choices_and_default [VAL]

ARGS:
  [VAL]  [possible values: x, y, z] [default: x]

EOF
exit 0

# RUN_OUTPUT
USAGE: prog cmd_arg_with_choices_and_default [VAL]

ARGS:
  [VAL]  [possible values: x, y, z] [default: x]

************ RUN ************
prog cmd_multi_arg_with_choices -h

# OUTPUT
command cat >&2 <<-'EOF' 
USAGE: prog cmd_multi_arg_with_choices [VAL]...

ARGS:
  [VAL]...  [possible values: x, y, z]

EOF
exit 0

# RUN_OUTPUT
USAGE: prog cmd_multi_arg_with_choices [VAL]...

ARGS:
  [VAL]...  [possible values: x, y, z]

************ RUN ************
prog cmd_required_multi_arg_with_choices -h

# OUTPUT
command cat >&2 <<-'EOF' 
USAGE: prog cmd_required_multi_arg_with_choices <VAL>...

ARGS:
  <VAL>...  [possible values: x, y, z]

EOF
exit 0

# RUN_OUTPUT
USAGE: prog cmd_required_multi_arg_with_choices <VAL>...

ARGS:
  <VAL>...  [possible values: x, y, z]

************ RUN ************
prog cmd_arg_with_choice_fn -h

# OUTPUT
command cat >&2 <<-'EOF' 
USAGE: prog cmd_arg_with_choice_fn [VAL]

ARGS:
  [VAL]

EOF
exit 0

# RUN_OUTPUT
USAGE: prog cmd_arg_with_choice_fn [VAL]

ARGS:
  [VAL]

************ RUN ************
prog cmd_arg_with_choice_fn_and_skip_check -h

# OUTPUT
command cat >&2 <<-'EOF' 
USAGE: prog cmd_arg_with_choice_fn_and_skip_check [VAL]

ARGS:
  [VAL]

EOF
exit 0

# RUN_OUTPUT
USAGE: prog cmd_arg_with_choice_fn_and_skip_check [VAL]

ARGS:
  [VAL]

************ RUN ************
prog cmd_required_arg_with_choice_fn -h

# OUTPUT
command cat >&2 <<-'EOF' 
USAGE: prog cmd_required_arg_with_choice_fn <VAL>

ARGS:
  <VAL>

EOF
exit 0

# RUN_OUTPUT
USAGE: prog cmd_required_arg_with_choice_fn <VAL>

ARGS:
  <VAL>

************ RUN ************
prog cmd_multi_arg_with_choice_fn -h

# OUTPUT
command cat >&2 <<-'EOF' 
USAGE: prog cmd_multi_arg_with_choice_fn [VAL]...

ARGS:
  [VAL]...

EOF
exit 0

# RUN_OUTPUT
USAGE: prog cmd_multi_arg_with_choice_fn [VAL]...

ARGS:
  [VAL]...

************ RUN ************
prog cmd_required_multi_arg_with_choice_fn -h

# OUTPUT
command cat >&2 <<-'EOF' 
USAGE: prog cmd_required_multi_arg_with_choice_fn <VAL>...

ARGS:
  <VAL>...

EOF
exit 0

# RUN_OUTPUT
USAGE: prog cmd_required_multi_arg_with_choice_fn <VAL>...

ARGS:
  <VAL>...

************ RUN ************
prog cmd_multi_arg_with_choice_fn_and_comma_sep -h

# OUTPUT
command cat >&2 <<-'EOF' 
USAGE: prog cmd_multi_arg_with_choice_fn_and_comma_sep [VAL]...

ARGS:
  [VAL]...

EOF
exit 0

# RUN_OUTPUT
USAGE: prog cmd_multi_arg_with_choice_fn_and_comma_sep [VAL]...

ARGS:
  [VAL]...

************ RUN ************
prog cmd_terminaled -h

# OUTPUT
argc_vals=( -h )
argc__args=( prog cmd_terminaled -h )
argc__fn=cmd_terminaled
argc__positionals=( -h )
cmd_terminaled -h

# RUN_OUTPUT
argc__args=([0]="prog" [1]="cmd_terminaled" [2]="-h")
argc__fn=cmd_terminaled
argc__positionals=([0]="-h")
argc_vals=([0]="-h")
cmd_terminaled -h

************ RUN ************
prog cmd_arg_with_notation -h

# OUTPUT
command cat >&2 <<-'EOF' 
USAGE: prog cmd_arg_with_notation [FILE]

ARGS:
  [FILE]

EOF
exit 0

# RUN_OUTPUT
USAGE: prog cmd_arg_with_notation [FILE]

ARGS:
  [FILE]

************ RUN ************
prog cmd_two_multi_args -h

# OUTPUT
command cat >&2 <<-'EOF' 
USAGE: prog cmd_two_multi_args [VAL1]... [VAL2]...

ARGS:
  [VAL1]...
  [VAL2]...

EOF
exit 0

# RUN_OUTPUT
USAGE: prog cmd_two_multi_args [VAL1]... [VAL2]...

ARGS:
  [VAL1]...
  [VAL2]...

************ RUN ************
prog cmd_one_required_second_required_multi -h

# OUTPUT
command cat >&2 <<-'EOF' 
USAGE: prog cmd_one_required_second_required_multi <VAL1> <VAL2>...

ARGS:
  <VAL1>
  <VAL2>...

EOF
exit 0

# RUN_OUTPUT
USAGE: prog cmd_one_required_second_required_multi <VAL1> <VAL2>...

ARGS:
  <VAL1>
  <VAL2>...

************ RUN ************
prog cmd_three_required_args -h

# OUTPUT
command cat >&2 <<-'EOF' 
USAGE: prog cmd_three_required_args <VAL1> <VAL2> <VAL3>

ARGS:
  <VAL1>
  <VAL2>
  <VAL3>

EOF
exit 0

# RUN_OUTPUT
USAGE: prog cmd_three_required_args <VAL1> <VAL2> <VAL3>

ARGS:
  <VAL1>
  <VAL2>
  <VAL3>
